class Solution {
    public long solution(int n, int[] times) {
        long answer = 0;
        long count = 0;     
        long high = (long) times[times.length-1] * n;
        long mid = 0;
        long low = 0;
        while(high >= low) {

            count = 0;
            mid =(high+low)/2;
            for(int i=0; i<times.length; i++) {
                if(mid >= times[i]) count += mid/times[i];
            }

            if(count >= n) {
                high = mid-1;
            } else if( count < n) {
                low = mid+1;
            }
        }

        answer = low;
        return answer;
    }
}
